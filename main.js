!function(){var t={240:function(){},578:function(){}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,{a:e}),e},n.d=function(t,e){for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){"use strict";var t=n(240),e=n.n(t);const o={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error"},r={profileEditForm:document.forms["profile-form"],addCardForm:document.forms["card-form"],profileEditButton:document.querySelector("#profile-edit-button"),addCardButton:document.querySelector("#profile-add-button"),profileEditPopup:document.querySelector("#profile-edit-popup"),addCardPopup:document.querySelector("#add-card-popup"),picturePopup:document.querySelector("#picture-popup"),profileTitle:document.querySelector(".profile__title"),profileDescription:document.querySelector(".profile__description"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),cardListEl:document.querySelector(".cards__list"),addCardTitleInput:document.querySelector("#add-card-title"),addCardUrlInput:document.querySelector("#add-card-url")};var i=n(578),s=n.n(i);class l{constructor(t,e){this._settings=t,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():(this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1)}_checkInputValidity(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.validity.valid?(t.classList.remove(this._settings.inputErrorClass),e.textContent=""):(t.classList.add(this._settings.inputErrorClass),e.textContent=t.validationMessage)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._inputList.forEach((t=>{const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._settings.inputErrorClass),e.textContent=""})),this._toggleButtonState()}disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}}class c{constructor(t){this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".popup__close").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(t=>{t.target===this._popupElement&&this.close()}))}}class p extends c{constructor(t,e){super(t),this._handleFormSubmit=e,this._formElement=this._popupElement.querySelector(".popup__form"),this._inputList=Array.from(this._formElement.querySelectorAll(".popup__input"))}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._formElement.reset()}))}}const u=new(e())({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"2844dc79-6340-476e-8bf6-ea55311716d1","Content-Type":"application/json"}}),{profileEditForm:a,addCardForm:d,profileEditButton:m,addCardButton:_,profileTitleInput:h,profileDescriptionInput:f}=r,E=new class{constructor(t){let{nameSelector:e,descriptionSelector:n}=t;this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(t){let{name:e,description:n}=t;this._nameElement.textContent=e,this._descriptionElement.textContent=n}}({nameSelector:".profile__title",descriptionSelector:".profile__description"});function v(t){return new(s())(t,"#card-template",S).getView()}const y=new class{constructor(t,e){let{items:n,renderer:o}=t;this._items=n,this._renderer=o,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({renderer:t=>{const e=v(t);y.addItem(e)}},".cards__list");function S(t,e){C.open({name:e,link:t})}u.getUserInfo().then((t=>{E.setUserInfo({name:t.name,description:t.about})})).catch((t=>console.error("Error fetching user info:",t))),u.getInitialCards().then((t=>{t.forEach((t=>{const e=v(t);y.addItem(e)}))})).catch((t=>console.error("Error fetching cards:",t)));const g=new p("#profile-edit-popup",(t=>{u.updateUserInfo(t).then((t=>{E.setUserInfo({name:t.name,description:t.about}),g.close()})).catch((t=>console.error("Error updating profile:",t)))}));g.setEventListeners();const b=new p("#add-card-popup",(t=>{u.addCard(t).then((t=>{const e=v(t);y.addItem(e),b.close()})).catch((t=>console.error("Error adding card:",t)))}));b.setEventListeners();const C=new class extends c{constructor(t){super(t),this._imageElement=this._popupElement.querySelector(".popup__image"),this._captionElement=this._popupElement.querySelector(".popup__caption")}open(t){let{name:e,link:n}=t;this._imageElement.src=n,this._imageElement.alt=e,this._captionElement.textContent=e,super.open()}}("#picture-popup");C.setEventListeners();const L=new l(o,a),I=new l(o,d);L.enableValidation(),I.enableValidation(),m.addEventListener("click",(function(){const t=E.getUserInfo();h.value=t.name,f.value=t.description,L.resetValidation(),g.open()})),_.addEventListener("click",(()=>{b.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,